#!/bin/liz

Lines = {}
Search_for = {
    "export class", "export abstract class", "export type", "export interface",
    "export enum", "export const", "export function"
}

function GetName(found_line)
    local result = Liz.split_spaces(found_line)
    if Liz.contains(found_line, "abstract") then
        result = result[4]
    else
        result = result[3]
    end
    if Liz.contains(result, "(") then result = Liz.split(result, "(")[1] end
    return result
end

function GetLink(found_path)
    local result = Liz.del(found_path, 2, 6)
    local len = Liz.len(result)
    local result = Liz.del(result, len - 3, len)
    return result
end

function GetAll(source)
    local founds = Liz.text_file_find_any(source, Search_for)
    if founds then
        for _, found in pairs(founds) do
            local parts = Liz.text_file_founds(found)
            local identy = GetName(parts[6])
            local link = GetLink(parts[1])
            table.insert(Lines,
                         "export { " .. identy .. " } from '" .. link .. "';")
        end
    end
end

print("Making 'src/all.ts'...")
Sources = Liz.path_list_files_ext_in("./src", ".ts")
for _, source in pairs(Sources) do
    if not (source == "./src/all.ts") then GetAll(source) end
end
Liz.write_lines("./src/all.ts", Lines)
print("Done make 'src/all.ts'")
